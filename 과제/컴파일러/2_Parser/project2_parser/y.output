Terminals unused in grammar

    ENDFILE
    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier id SEMI

    7 $@1: %empty

    8 var_declaration: type_specifier id LBRACE NUM $@1 RBRACE SEMI

    9 id: ID

   10 type_specifier: INT
   11               | VOID
   12               | INT LBRACE RBRACE
   13               | VOID LBRACE RBRACE

   14 fun_declaration: type_specifier id LPAREN params RPAREN compound_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_specifier id
   20      | type_specifier id LBRACE RBRACE

   21 compound_stmt: LCURLY local_declarations statement_list RCURLY

   22 local_declarations: local_declarations var_declaration
   23                   | %empty

   24 statement_list: statement_list statement
   25               | %empty

   26 statement: expression_stmt
   27          | compound_stmt
   28          | selection_stmt
   29          | iteration_stmt
   30          | return_stmt

   31 expression_stmt: expression SEMI
   32                | SEMI

   33 selection_stmt: IF LPAREN expression RPAREN statement
   34               | IF LPAREN expression RPAREN statement ELSE statement

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement

   36 return_stmt: RETURN SEMI
   37            | RETURN expression SEMI

   38 expression: var ASSIGN expression
   39           | simple_expression

   40 var: id
   41    | id LBRACE expression RBRACE

   42 simple_expression: additive_expression relop additive_expression
   43                  | additive_expression

   44 relop: LE
   45      | LT
   46      | GE
   47      | GT
   48      | EQ
   49      | NE

   50 additive_expression: additive_expression addop term
   51                    | term

   52 addop: PLUS
   53      | MINUS

   54 term: term mulop factor
   55     | factor

   56 mulop: TIMES
   57      | OVER

   58 factor: LPAREN expression RPAREN
   59       | var
   60       | call
   61       | NUM

   62 call: id LPAREN args RPAREN

   63 args: arg_list
   64     | %empty

   65 arg_list: arg_list COMMA expression
   66         | expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 35
    RETURN (259) 36 37
    INT (260) 10 12
    VOID (261) 11 13 16
    IF (262) 33 34
    IFX (263)
    ELSE (264) 34
    ID (265) 9
    NUM (266) 8 61
    EQ (267) 48
    NE (268) 49
    LT (269) 45
    LE (270) 44
    GT (271) 47
    GE (272) 46
    PLUS (273) 52
    MINUS (274) 53
    ASSIGN (275) 38
    TIMES (276) 56
    OVER (277) 57
    SEMI (278) 6 8 31 32 36 37
    COMMA (279) 17 65
    RCURLY (280) 21
    LCURLY (281) 21
    LBRACE (282) 8 12 13 20 41
    RBRACE (283) 8 12 13 20 41
    LPAREN (284) 14 33 34 35 58 62
    RPAREN (285) 14 33 34 35 58 62
    ENDFILE (286)
    ERROR (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 1
        on right: 0
    declaration_list (35)
        on left: 2 3
        on right: 1 2
    declaration (36)
        on left: 4 5
        on right: 2 3
    var_declaration (37)
        on left: 6 8
        on right: 4 22
    $@1 (38)
        on left: 7
        on right: 8
    id (39)
        on left: 9
        on right: 6 8 14 19 20 40 41 62
    type_specifier (40)
        on left: 10 11 12 13
        on right: 6 8 14 19 20
    fun_declaration (41)
        on left: 14
        on right: 5
    params (42)
        on left: 15 16
        on right: 14
    param_list (43)
        on left: 17 18
        on right: 15 17
    param (44)
        on left: 19 20
        on right: 17 18
    compound_stmt (45)
        on left: 21
        on right: 14 27
    local_declarations (46)
        on left: 22 23
        on right: 21 22
    statement_list (47)
        on left: 24 25
        on right: 21 24
    statement (48)
        on left: 26 27 28 29 30
        on right: 24 33 34 35
    expression_stmt (49)
        on left: 31 32
        on right: 26
    selection_stmt (50)
        on left: 33 34
        on right: 28
    iteration_stmt (51)
        on left: 35
        on right: 29
    return_stmt (52)
        on left: 36 37
        on right: 30
    expression (53)
        on left: 38 39
        on right: 31 33 34 35 37 38 41 58 65 66
    var (54)
        on left: 40 41
        on right: 38 59
    simple_expression (55)
        on left: 42 43
        on right: 39
    relop (56)
        on left: 44 45 46 47 48 49
        on right: 42
    additive_expression (57)
        on left: 50 51
        on right: 42 43 50
    addop (58)
        on left: 52 53
        on right: 50
    term (59)
        on left: 54 55
        on right: 50 51 54
    mulop (60)
        on left: 56 57
        on right: 54
    factor (61)
        on left: 58 59 60 61
        on right: 54 55
    call (62)
        on left: 62
        on right: 60
    args (63)
        on left: 63 64
        on right: 62
    arg_list (64)
        on left: 65 66
        on right: 63 65


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

   10 type_specifier: INT .
   12               | INT . LBRACE RBRACE

    LBRACE  shift, and go to state 9

    $default  reduce using rule 10 (type_specifier)


State 2

   11 type_specifier: VOID .
   13               | VOID . LBRACE RBRACE

    LBRACE  shift, and go to state 10

    $default  reduce using rule 11 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 12
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . id SEMI
    8                | type_specifier . id LBRACE NUM $@1 RBRACE SEMI
   14 fun_declaration: type_specifier . id LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 13

    id  go to state 14


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

   12 type_specifier: INT LBRACE . RBRACE

    RBRACE  shift, and go to state 15


State 10

   13 type_specifier: VOID LBRACE . RBRACE

    RBRACE  shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 13

    9 id: ID .

    $default  reduce using rule 9 (id)


State 14

    6 var_declaration: type_specifier id . SEMI
    8                | type_specifier id . LBRACE NUM $@1 RBRACE SEMI
   14 fun_declaration: type_specifier id . LPAREN params RPAREN compound_stmt

    SEMI    shift, and go to state 17
    LBRACE  shift, and go to state 18
    LPAREN  shift, and go to state 19


State 15

   12 type_specifier: INT LBRACE RBRACE .

    $default  reduce using rule 12 (type_specifier)


State 16

   13 type_specifier: VOID LBRACE RBRACE .

    $default  reduce using rule 13 (type_specifier)


State 17

    6 var_declaration: type_specifier id SEMI .

    $default  reduce using rule 6 (var_declaration)


State 18

    8 var_declaration: type_specifier id LBRACE . NUM $@1 RBRACE SEMI

    NUM  shift, and go to state 20


State 19

   14 fun_declaration: type_specifier id LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 21

    type_specifier  go to state 22
    params          go to state 23
    param_list      go to state 24
    param           go to state 25


State 20

    8 var_declaration: type_specifier id LBRACE NUM . $@1 RBRACE SEMI

    $default  reduce using rule 7 ($@1)

    $@1  go to state 26


State 21

   11 type_specifier: VOID .
   13               | VOID . LBRACE RBRACE
   16 params: VOID .

    LBRACE  shift, and go to state 10

    RPAREN    reduce using rule 16 (params)
    $default  reduce using rule 11 (type_specifier)


State 22

   19 param: type_specifier . id
   20      | type_specifier . id LBRACE RBRACE

    ID  shift, and go to state 13

    id  go to state 27


State 23

   14 fun_declaration: type_specifier id LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 28


State 24

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 29

    $default  reduce using rule 15 (params)


State 25

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 26

    8 var_declaration: type_specifier id LBRACE NUM $@1 . RBRACE SEMI

    RBRACE  shift, and go to state 30


State 27

   19 param: type_specifier id .
   20      | type_specifier id . LBRACE RBRACE

    LBRACE  shift, and go to state 31

    $default  reduce using rule 19 (param)


State 28

   14 fun_declaration: type_specifier id LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 32

    compound_stmt  go to state 33


State 29

   17 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 22
    param           go to state 34


State 30

    8 var_declaration: type_specifier id LBRACE NUM $@1 RBRACE . SEMI

    SEMI  shift, and go to state 35


State 31

   20 param: type_specifier id LBRACE . RBRACE

    RBRACE  shift, and go to state 36


State 32

   21 compound_stmt: LCURLY . local_declarations statement_list RCURLY

    $default  reduce using rule 23 (local_declarations)

    local_declarations  go to state 37


State 33

   14 fun_declaration: type_specifier id LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 14 (fun_declaration)


State 34

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


State 35

    8 var_declaration: type_specifier id LBRACE NUM $@1 RBRACE SEMI .

    $default  reduce using rule 8 (var_declaration)


State 36

   20 param: type_specifier id LBRACE RBRACE .

    $default  reduce using rule 20 (param)


State 37

   21 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   22 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 25 (statement_list)

    var_declaration  go to state 38
    type_specifier   go to state 39
    statement_list   go to state 40


State 38

   22 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 22 (local_declarations)


State 39

    6 var_declaration: type_specifier . id SEMI
    8                | type_specifier . id LBRACE NUM $@1 RBRACE SEMI

    ID  shift, and go to state 13

    id  go to state 41


State 40

   21 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   24 statement_list: statement_list . statement

    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    IF      shift, and go to state 44
    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    SEMI    shift, and go to state 46
    RCURLY  shift, and go to state 47
    LCURLY  shift, and go to state 32
    LPAREN  shift, and go to state 48

    id                   go to state 49
    compound_stmt        go to state 50
    statement            go to state 51
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 41

    6 var_declaration: type_specifier id . SEMI
    8                | type_specifier id . LBRACE NUM $@1 RBRACE SEMI

    SEMI    shift, and go to state 17
    LBRACE  shift, and go to state 18


State 42

   35 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 63


State 43

   36 return_stmt: RETURN . SEMI
   37            | RETURN . expression SEMI

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    SEMI    shift, and go to state 64
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 65
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 44

   33 selection_stmt: IF . LPAREN expression RPAREN statement
   34               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 66


State 45

   61 factor: NUM .

    $default  reduce using rule 61 (factor)


State 46

   32 expression_stmt: SEMI .

    $default  reduce using rule 32 (expression_stmt)


State 47

   21 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 21 (compound_stmt)


State 48

   58 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 67
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 49

   40 var: id .
   41    | id . LBRACE expression RBRACE
   62 call: id . LPAREN args RPAREN

    LBRACE  shift, and go to state 68
    LPAREN  shift, and go to state 69

    $default  reduce using rule 40 (var)


State 50

   27 statement: compound_stmt .

    $default  reduce using rule 27 (statement)


State 51

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 52

   26 statement: expression_stmt .

    $default  reduce using rule 26 (statement)


State 53

   28 statement: selection_stmt .

    $default  reduce using rule 28 (statement)


State 54

   29 statement: iteration_stmt .

    $default  reduce using rule 29 (statement)


State 55

   30 statement: return_stmt .

    $default  reduce using rule 30 (statement)


State 56

   31 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 70


State 57

   38 expression: var . ASSIGN expression
   59 factor: var .

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 59 (factor)


State 58

   39 expression: simple_expression .

    $default  reduce using rule 39 (expression)


State 59

   42 simple_expression: additive_expression . relop additive_expression
   43                  | additive_expression .
   50 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 72
    NE     shift, and go to state 73
    LT     shift, and go to state 74
    LE     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 43 (simple_expression)

    relop  go to state 80
    addop  go to state 81


State 60

   51 additive_expression: term .
   54 term: term . mulop factor

    TIMES  shift, and go to state 82
    OVER   shift, and go to state 83

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 84


State 61

   55 term: factor .

    $default  reduce using rule 55 (term)


State 62

   60 factor: call .

    $default  reduce using rule 60 (factor)


State 63

   35 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 85
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 64

   36 return_stmt: RETURN SEMI .

    $default  reduce using rule 36 (return_stmt)


State 65

   37 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 86


State 66

   33 selection_stmt: IF LPAREN . expression RPAREN statement
   34               | IF LPAREN . expression RPAREN statement ELSE statement

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 87
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 67

   58 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 88


State 68

   41 var: id LBRACE . expression RBRACE

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 89
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 69

   62 call: id LPAREN . args RPAREN

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    $default  reduce using rule 64 (args)

    id                   go to state 49
    expression           go to state 90
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62
    args                 go to state 91
    arg_list             go to state 92


State 70

   31 expression_stmt: expression SEMI .

    $default  reduce using rule 31 (expression_stmt)


State 71

   38 expression: var ASSIGN . expression

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 93
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 72

   48 relop: EQ .

    $default  reduce using rule 48 (relop)


State 73

   49 relop: NE .

    $default  reduce using rule 49 (relop)


State 74

   45 relop: LT .

    $default  reduce using rule 45 (relop)


State 75

   44 relop: LE .

    $default  reduce using rule 44 (relop)


State 76

   47 relop: GT .

    $default  reduce using rule 47 (relop)


State 77

   46 relop: GE .

    $default  reduce using rule 46 (relop)


State 78

   52 addop: PLUS .

    $default  reduce using rule 52 (addop)


State 79

   53 addop: MINUS .

    $default  reduce using rule 53 (addop)


State 80

   42 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    var                  go to state 94
    additive_expression  go to state 95
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 81

   50 additive_expression: additive_expression addop . term

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id      go to state 49
    var     go to state 94
    term    go to state 96
    factor  go to state 61
    call    go to state 62


State 82

   56 mulop: TIMES .

    $default  reduce using rule 56 (mulop)


State 83

   57 mulop: OVER .

    $default  reduce using rule 57 (mulop)


State 84

   54 term: term mulop . factor

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id      go to state 49
    var     go to state 94
    factor  go to state 97
    call    go to state 62


State 85

   35 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 98


State 86

   37 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 37 (return_stmt)


State 87

   33 selection_stmt: IF LPAREN expression . RPAREN statement
   34               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


State 88

   58 factor: LPAREN expression RPAREN .

    $default  reduce using rule 58 (factor)


State 89

   41 var: id LBRACE expression . RBRACE

    RBRACE  shift, and go to state 100


State 90

   66 arg_list: expression .

    $default  reduce using rule 66 (arg_list)


State 91

   62 call: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 101


State 92

   63 args: arg_list .
   65 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 63 (args)


State 93

   38 expression: var ASSIGN expression .

    $default  reduce using rule 38 (expression)


State 94

   59 factor: var .

    $default  reduce using rule 59 (factor)


State 95

   42 simple_expression: additive_expression relop additive_expression .
   50 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 42 (simple_expression)

    addop  go to state 81


State 96

   50 additive_expression: additive_expression addop term .
   54 term: term . mulop factor

    TIMES  shift, and go to state 82
    OVER   shift, and go to state 83

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 84


State 97

   54 term: term mulop factor .

    $default  reduce using rule 54 (term)


State 98

   35 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    IF      shift, and go to state 44
    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    SEMI    shift, and go to state 46
    LCURLY  shift, and go to state 32
    LPAREN  shift, and go to state 48

    id                   go to state 49
    compound_stmt        go to state 50
    statement            go to state 103
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 99

   33 selection_stmt: IF LPAREN expression RPAREN . statement
   34               | IF LPAREN expression RPAREN . statement ELSE statement

    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    IF      shift, and go to state 44
    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    SEMI    shift, and go to state 46
    LCURLY  shift, and go to state 32
    LPAREN  shift, and go to state 48

    id                   go to state 49
    compound_stmt        go to state 50
    statement            go to state 104
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 100

   41 var: id LBRACE expression RBRACE .

    $default  reduce using rule 41 (var)


State 101

   62 call: id LPAREN args RPAREN .

    $default  reduce using rule 62 (call)


State 102

   65 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 48

    id                   go to state 49
    expression           go to state 105
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 103

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (iteration_stmt)


State 104

   33 selection_stmt: IF LPAREN expression RPAREN statement .
   34               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 106

    $default  reduce using rule 33 (selection_stmt)


State 105

   65 arg_list: arg_list COMMA expression .

    $default  reduce using rule 65 (arg_list)


State 106

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    IF      shift, and go to state 44
    ID      shift, and go to state 13
    NUM     shift, and go to state 45
    SEMI    shift, and go to state 46
    LCURLY  shift, and go to state 32
    LPAREN  shift, and go to state 48

    id                   go to state 49
    compound_stmt        go to state 50
    statement            go to state 107
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 107

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (selection_stmt)
